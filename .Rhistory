d <- left_join(c, volunteer, by = c("tucaseid")) %>%
mutate(volunteer = dur)
d = subset(d, select = -c(tiercode, dur))
#Playing Sports
sports <- time %>%
ungroup() %>%
filter(between(tiercode, 130101, 130199))
e <- left_join(d, sports, by = c("tucaseid")) %>%
mutate(sports = dur)
e = subset(e, select = -c(tiercode, dur))
#Religious Activities
religion <- time %>%
ungroup() %>%
filter(between(tiercode, 140101, 149999))
f <- left_join(e, religion, by = c("tucaseid")) %>%
mutate(religion = dur)
f = subset(f, select = -c(tiercode, dur))
#Eating Meals
eating <- time %>%
ungroup() %>%
filter(between(tiercode, 110101, 119999))
g <- left_join(f, eating, by = c("tucaseid")) %>%
mutate(eating = dur)
g = subset(g, select = -c(tiercode, dur))
#Shopping
shopping <- time %>%
ungroup() %>%
filter(between(tiercode, 70101, 70199))
h <- left_join(g, shopping, by = c("tucaseid")) %>%
mutate(shopping = dur)
h = subset(h, select = -c(tiercode, dur))
#Research and Homework
research_homework <- time %>%
ungroup() %>%
filter(between(tiercode, 60301, 60399))
i <- left_join(h, research_homework, by = c("tucaseid")) %>%
mutate(research_homework = dur)
i = subset(i, select = -c(tiercode, dur))
#Classtime
class <- time %>%
ungroup() %>%
filter(between(tiercode, 60101, 60199))
j <- left_join(i, class, by = c("tucaseid")) %>%
mutate(class = dur)
j = subset(j, select = -c(tiercode, dur))
#Working
working <- time %>%
ungroup() %>%
filter(between(tiercode, 50101, 59999))
k <- left_join(j, working, by = c("tucaseid")) %>%
mutate(working = dur)
k = subset(k, select = -c(tiercode, dur))
#Socializing
socialevents <- time %>%
ungroup() %>%
filter(between(tiercode, 120201, 120299 | 129999))
l <- left_join(k, socialevents, by = c("tucaseid")) %>%
mutate(socialevents = dur)
l = subset(l, select = -c(tiercode, dur))
#Television
tv <- time %>%
ungroup() %>%
filter(between(tiercode, 120303, 120304))
m <- left_join(l, tv, by = c("tucaseid")) %>%
mutate(tv = dur)
m = subset(m, select = -c(tiercode, dur))
#Drug Use
druguse <- time %>%
ungroup() %>%
filter(tiercode == 120302)
n <- left_join(m, tv, by = c("tucaseid")) %>%
mutate(druguse = dur)
n = subset(n, select = -c(tiercode, dur))
#Computer Usage
computeruse <- time %>%
ungroup() %>%
filter(tiercode == 120308)
o <- left_join(n, computeruse, by = c("tucaseid")) %>%
mutate(computeruse = dur)
o = subset(o, select = -c(tiercode, dur))
#Get rid of duplicate rows
data <- o %>%
distinct()
data <- data[!duplicated(data$tucaseid), ]
#Change N/A variables to value of 0
data$sleep[which(is.na(data$sleep))] <- 0
data$housework[which(is.na(data$housework))] <- 0
data$phonetime[which(is.na(data$phonetime))] <- 0
data$volunteer[which(is.na(data$volunteer))] <- 0
data$sports[which(is.na(data$sports))] <- 0
data$religion[which(is.na(data$religion))] <- 0
data$eating[which(is.na(data$eating))] <- 0
data$shopping[which(is.na(data$shopping))] <- 0
data$research_homework[which(is.na(data$research_homework))] <- 0
data$class[which(is.na(data$class))] <- 0
data$working[which(is.na(data$working))] <- 0
data$tv[which(is.na(data$tv))] <- 0
data$computeruse[which(is.na(data$computeruse))] <- 0
data$druguse[which(is.na(data$druguse))] <- 0
#Change min to hours
data$sleep <- data$sleep / 60
data$housework <- data$housework / 60
data$phonetime <- data$phonetime / 60
data$volunteer <- data$volunteer / 60
data$sports <- data$sports / 60
data$religion <- data$religion / 60
data$eating <- data$eating / 60
data$shopping <- data$shopping / 60
data$research_homework <- data$research_homework / 60
data$class <- data$class / 60
data$working <- data$working / 60
data$tv <- data$tv / 60
data$computeruse <- data$computeruse / 60
data$druguse <- data$druguse / 60
runApp('50proj')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(readr)
library(rstanarm)
library(ggplot2)
library(ggridges)
# Create a new 2 x 2 tibble with the sample countries representing northern and non-northern
# Calculate the mean by calling specific column from dataset with $
sample <- tibble(north = c(0, 1), economy = mean(europepolicy$economy))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(readr)
library(rstanarm)
library(ggplot2)
library(ggridges)
europepolicy <- read.csv("raw_data/caugheyEtAl2019.csv")
# Get rid of rows containing N/A data values
europepolicy <- na.omit(europepolicy)
# Replication of plot
# When using axis.text, ensure to use element_text around size arguments
# Utilize nrow() argument in facet_wrap to change display of graphs
# Able to use theme() twice to edit text and remove ticks
# Caption displays the lower left-hand side text
europepolicy %>%
ggplot(aes(x = year, y = immigration)) +
facet_wrap(~country, nrow = 3) +
geom_point(size = .5) +
geom_line() +
theme_linedraw() +
theme(axis.text = element_text(size = 5), strip.text = element_text(size = 7),
panel.grid = element_blank(), panel.spacing.x = unit(3, "mm"),
axis.ticks = element_blank(), axis.ticks.y = element_blank()) +
geom_hline(yintercept = 0, col = "darkblue", lty = "dashed") +
scale_x_continuous(name = "Year", labels = c("1989", "", "", "", "", "2015")) +
labs(title = "Estimated Conservatism on Immigration Policy",
subtitle = "27 European Countries: 1989 - 2015",
y = "Estimated Immigration Conservatism",
x = "Year",
caption = "Source: Caughey et al. 2019")
# Goal: regressing immigration conservatism on an intercept, economic conservatism,
# the north indicator, and the interaction between north and economic conservatism
# Use stan_glm to fit the model, it is a standard generalized linear regression.
# The default of stan_glm is family = gaussian, so did not include
# Use set seed to ensure results can be replicated
set.seed(10)
fit_1 <- stan_glm(data = europepolicy,
formula = immigration ~ economy + north + (economy * north),
refresh = 0)
print(fit_1, digits = 3)
# Create a new 2 x 2 tibble with the sample countries representing northern and non-northern
# Calculate the mean by calling specific column from dataset with $
sample <- tibble(north = c(0, 1), economy = mean(europepolicy$economy))
# Utilize model from q2 in posterior_predict
# Use as.numeric to tidy and make steps easier
# Use to get a posterior that draws from northern and non-northern
fit1_posterior <- posterior_predict(fit_1, newdata = sample) %>%
as_tibble() %>%
mutate_all(as.numeric)
# Rename the data so it's easier to work with
# Use pivot_longer to standardize data
# In order to set scale, set geom_hist y value with equation
# Able to use own colors
fit1_posterior %>%
rename("Rest of Europe" = `1`,
"Northern Europe" = `2`) %>%
pivot_longer(cols = "Rest of Europe":"Northern Europe",
names_to = "Region",
values_to = "economy") %>%
ggplot(aes(x = economy, fill = Region)) +
geom_histogram(aes(y = after_stat(count/sum(count))),
alpha = 0.5,
bins = 90,
position = "identity") +
labs(title = "Predicted Immigration Attitudes",
subtitle = "Posterior Distribution Based on Estimates from 1981 - 2015",
x = "Immigration Conservatism",
y = "Count") +
scale_fill_manual(values = c("purple", "orange"),
name = "Region") +
theme_classic()
set.seed(1000)
fit_obj <- stan_glm(data = data,
formula = sleep ~ famincome,
refresh = 0)
fit_obj %>%
tbl_regression() %>%
as_gt()
fit_obj_posterior <- posterior_predict(fit_obj, newdata = fulldata) %>%
as_tibble() %>%
mutate_all(as.numeric)
set.seed(1000)
fit_obj <- stan_glm(data = data,
formula = sleep ~ famincome,
refresh = 0)
fit_obj %>%
tbl_regression() %>%
as_gt()
fit_obj_posterior <- posterior_predict(fit_obj, newdata = data) %>%
as_tibble() %>%
mutate_all(as.numeric)
fit_obj_posterior %>%
rename("Sleep" = `sleep`,
"Housework" = `housework`,
"Phonetime" = `phonetime`,
"Volunteer" = `volunteer`,
"Sports" = `sports`,
"Religion" = `religion`,
"Eating" = `eating`,
"Shopping" = `shopping`,
"Research & Homework" = `research_homework`,
"Class Time" = `class`,
"Working" = `working`,
"Watching TV" = `tv`,
"Drug Usage" = `druguse`,
"Computer Usage" = `computeruse`) %>%
pivot_longer(cols = "Sleep":"Computer Usage",
names_to = "Activity",
values_to = "hours") %>%
ggplot(aes(x = hours)) +
geom_histogram(aes(y = after_stat(count/sum(count))),
alpha = 0.5,
bins = 90,
position = "identity")
View(europepolicy)
set.seed(1000)
fit_obj <- stan_glm(data = data,
formula = sleep ~ famincome,
refresh = 0)
fit_obj %>%
tbl_regression() %>%
as_gt()
fit_obj_posterior <- posterior_predict(fit_obj, newdata = data) %>%
as_tibble() %>%
mutate_all(as.numeric)
fit_obj_posterior %>%
rename("Sleep" = `sleep`,
"Housework" = `housework`,
"Phonetime" = `phonetime`,
"Volunteer" = `volunteer`,
"Sports" = `sports`,
"Religion" = `religion`,
"Eating" = `eating`,
"Shopping" = `shopping`,
"Research & Homework" = `research_homework`,
"Class Time" = `class`,
"Working" = `working`,
"Watching TV" = `tv`,
"Drug Usage" = `druguse`,
"Computer Usage" = `computeruse`) %>%
pivot_longer(cols = "Sleep":"Computer Usage",
names_to = "Activity",
values_to = "Sleep":"Computer Usage") %>%
ggplot(aes(x = hours)) +
geom_histogram(aes(y = after_stat(count/sum(count))),
alpha = 0.5,
bins = 90,
position = "identity")
View(europepolicy)
set.seed(100)
fit_obj <- stan_glm(data = data,
formula = sleep ~ famincome,
refresh = 0)
fit_obj %>%
tbl_regression() %>%
as_gt()
fit_obj_posterior <- posterior_predict(fit_obj, newdata = data) %>%
as_tibble() %>%
mutate_all(as.numeric)
fitobj_posterior <- posterior_predict(fit_obj, newdata = data) %>%
as_tibble() %>%
mutate_all(as.numeric)
fitobj_posterior
fit1_posterior
hawaii <- data %>%
filter(state == "HI") %>%
select(state, sex, age, race, edu, famincome, sleep)
hawaii <- data %>%
filter(state == "HI") %>%
select(state, sex, age, race, edu, famincome, sleep)
fit_obj <- stan_glm(data = hawaii,
formula = sleep ~ famincome,
refresh = 0)
fit_obj %>%
tbl_regression() %>%
as_gt()
fit_obj_posterior <- posterior_predict(fit_obj, newdata = hawaii) %>%
as_tibble() %>%
mutate_all(as.numeric)
fit_obj_posterior
fit_obj <- stan_glm(data = data,
formula = state ~ sleep + famincome,
refresh = 0)
fit_obj <- stan_glm(data = data,
formula = sleep ~ state + famincome + edu,
refresh = 0)
fit_obj %>%
tbl_regression() %>%
as_gt()
fit_obj_posterior <- posterior_predict(fit_obj, newdata = data) %>%
as_tibble() %>%
mutate_all(as.numeric)
fit_obj_posterior
hawaii <- data %>%
filter(state == "HI") %>%
select(state, sleep)
fit_obj <- stan_glm(data = hawaii,
formula = sleep ~ state,
refresh = 0)
hawaii <- data %>%
filter(state == "HI") %>%
select(state, sleep)
fit_obj <- stan_glm(data = hawaii,
formula = sleep,
refresh = 0)
model <- data %>%
ggplot(data = model, aes(x = sleep)) +
geom_histogram()
model <- data %>%
ggplot(data = model(aes(x = sleep))) +
geom_histogram()
data %>%
ggplot(aes(x = sleep)) +
geom_histogram()
runApp('50proj')
runApp('50proj')
runApp('50proj')
runApp('50proj')
runApp('50proj')
runApp('50proj')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(tidyverse)
library(ggplot2)
library(atus)
library(shinythemes)
library(skimr)
library(readxl)
library(janitor)
library(dplyr)
library(rstanarm)
library(gtsummary)
library(broom.mixed)
library(gt)
cps <- atuscps
time <- atusact
resp <- atusresp
#join cpc and resp files together by respondent's ID number
table <- left_join(cps, resp, by = c("tucaseid")) %>%
select(tucaseid, region, state, sex, age, edu, diary_mo, diary_day, race, famincome, tuyear, occup_code, labor_status, student_status,hh_size) %>%
filter(tuyear == c("2012", "2013", "2014", "2015", "2016")) %>%
distinct()
#Add variables as columns to dataframe
#Sleep
sleep <- time %>%
ungroup() %>%
filter(tiercode == 10101)
a <- left_join(table, sleep, by = c("tucaseid")) %>%
mutate(sleep = dur)
a = subset(a, select = -c(tiercode, dur))
#Housework
housework <- time %>%
ungroup() %>%
filter(between(tiercode, 20101, 20199))
b <- left_join(a, housework, by = c("tucaseid")) %>%
mutate(housework = dur)
b = subset(b, select = -c(tiercode, dur))
#Telephone
phonetime <- time %>%
ungroup() %>%
filter(between(tiercode, 160101, 169989))
c <- left_join(b, phonetime, by = c("tucaseid")) %>%
mutate(phonetime = dur)
c = subset(c, select = -c(tiercode, dur))
#Volunteer
volunteer <- time %>%
ungroup() %>%
filter(between(tiercode, 150101, 159989))
d <- left_join(c, volunteer, by = c("tucaseid")) %>%
mutate(volunteer = dur)
d = subset(d, select = -c(tiercode, dur))
#Playing Sports
sports <- time %>%
ungroup() %>%
filter(between(tiercode, 130101, 130199))
e <- left_join(d, sports, by = c("tucaseid")) %>%
mutate(sports = dur)
e = subset(e, select = -c(tiercode, dur))
#Religious Activities
religion <- time %>%
ungroup() %>%
filter(between(tiercode, 140101, 149999))
f <- left_join(e, religion, by = c("tucaseid")) %>%
mutate(religion = dur)
f = subset(f, select = -c(tiercode, dur))
#Eating Meals
eating <- time %>%
ungroup() %>%
filter(between(tiercode, 110101, 119999))
g <- left_join(f, eating, by = c("tucaseid")) %>%
mutate(eating = dur)
g = subset(g, select = -c(tiercode, dur))
#Shopping
shopping <- time %>%
ungroup() %>%
filter(between(tiercode, 70101, 70199))
h <- left_join(g, shopping, by = c("tucaseid")) %>%
mutate(shopping = dur)
h = subset(h, select = -c(tiercode, dur))
#Research and Homework
research_homework <- time %>%
ungroup() %>%
filter(between(tiercode, 60301, 60399))
i <- left_join(h, research_homework, by = c("tucaseid")) %>%
mutate(research_homework = dur)
i = subset(i, select = -c(tiercode, dur))
#Classtime
class <- time %>%
ungroup() %>%
filter(between(tiercode, 60101, 60199))
j <- left_join(i, class, by = c("tucaseid")) %>%
mutate(class = dur)
j = subset(j, select = -c(tiercode, dur))
#Working
working <- time %>%
ungroup() %>%
filter(between(tiercode, 50101, 59999))
k <- left_join(j, working, by = c("tucaseid")) %>%
mutate(working = dur)
k = subset(k, select = -c(tiercode, dur))
#Socializing
socialevents <- time %>%
ungroup() %>%
filter(between(tiercode, 120201, 120299 | 129999))
l <- left_join(k, socialevents, by = c("tucaseid")) %>%
mutate(socialevents = dur)
l = subset(l, select = -c(tiercode, dur))
#Television
tv <- time %>%
ungroup() %>%
filter(between(tiercode, 120303, 120304))
m <- left_join(l, tv, by = c("tucaseid")) %>%
mutate(tv = dur)
m = subset(m, select = -c(tiercode, dur))
#Drug Use
druguse <- time %>%
ungroup() %>%
filter(tiercode == 120302)
n <- left_join(m, tv, by = c("tucaseid")) %>%
mutate(druguse = dur)
n = subset(n, select = -c(tiercode, dur))
#Computer Usage
computeruse <- time %>%
ungroup() %>%
filter(tiercode == 120308)
o <- left_join(n, computeruse, by = c("tucaseid")) %>%
mutate(computeruse = dur)
o = subset(o, select = -c(tiercode, dur))
#Get rid of duplicate rows
data <- o %>%
distinct()
data <- data[!duplicated(data$tucaseid), ]
#Change N/A variables to value of 0
data$sleep[which(is.na(data$sleep))] <- 0
data$housework[which(is.na(data$housework))] <- 0
data$phonetime[which(is.na(data$phonetime))] <- 0
data$volunteer[which(is.na(data$volunteer))] <- 0
data$sports[which(is.na(data$sports))] <- 0
data$religion[which(is.na(data$religion))] <- 0
data$eating[which(is.na(data$eating))] <- 0
data$shopping[which(is.na(data$shopping))] <- 0
data$research_homework[which(is.na(data$research_homework))] <- 0
data$class[which(is.na(data$class))] <- 0
data$working[which(is.na(data$working))] <- 0
data$tv[which(is.na(data$tv))] <- 0
data$computeruse[which(is.na(data$computeruse))] <- 0
data$druguse[which(is.na(data$druguse))] <- 0
#Change min to hours
data$sleep <- data$sleep / 60
data$housework <- data$housework / 60
data$phonetime <- data$phonetime / 60
data$volunteer <- data$volunteer / 60
data$sports <- data$sports / 60
data$religion <- data$religion / 60
data$eating <- data$eating / 60
data$shopping <- data$shopping / 60
data$research_homework <- data$research_homework / 60
data$class <- data$class / 60
data$working <- data$working / 60
data$tv <- data$tv / 60
data$computeruse <- data$computeruse / 60
data$druguse <- data$druguse / 60
model1 <- lm(data = data,
eating ~ age + sex + race + famincome)
summary(model1)
runApp('50proj')
